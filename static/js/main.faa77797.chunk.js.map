{"version":3,"sources":["components/gif-list/GifList.styles.tsx","components/gif-list/Gif.tsx","components/gif-list/GifList.tsx","components/SearchInput.tsx","components/Select.tsx","hooks/useScroll.tsx","utils/textUtils.ts","screens/home/Home.styles.tsx","screens/home/Home.tsx","hooks/useDebounce.tsx","hooks/useQuery.tsx","screens/favourites/Favourites.tsx","components/nav/Nav.styles.tsx","components/nav/Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GifListContainer","styled","div","FavButton","button","fav","GifContainer","span","GifList","gif","onClick","isFav","handleClick","selectedGif","alt","src","id","gifs","map","state","localStorage","getItem","parsedState","JSON","parse","some","favGif","Gif","SearchInput","onChange","value","type","e","target","Select","placeholder","name","disabled","useScroll","useState","isScrolledBottom","setIsScrolledBottom","useEffect","updatePosition","document","documentElement","scrollTop","window","innerHeight","body","scrollHeight","addEventListener","removeEventListener","API_KEY","getUrl","searchValue","startingItem","apiKey","Header","header","Body","main","Home","selectValue","setSelectValue","setSearchValue","page","setPage","setGifs","initialState","favGifs","setFavGifs","debouncedSearchValue","timeout","setState","timeoutId","setTimeout","clearTimeout","useDebounce","data","error","pageLoading","scrollLoading","res","setRes","callAPI","useCallback","url","a","fetchOnScroll","prevState","fetch","result","json","mappedData","item","images","original","useQuery","fetchGifs","gifResponse","length","receivedSearchValue","toBeRemove","newFavGifs","filter","setItem","stringify","Favourites","newGifs","Container","StyledButton","Nav","navigate","useNavigate","handleRedirection","path","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.faa77797.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const GifListContainer = styled.div`\n  padding: 0px 20px;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ninterface Props {\n  fav: boolean;\n}\n\nexport const FavButton = styled.button<Props>`\n  background-color: ${({ fav }) => (fav ? \"red\" : \"gray\")};\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ fav }) => (fav ? \"pink\" : \"lightgray\")};\n  }\n`;\n\nexport const GifContainer = styled.span`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  background-color: lightgray;\n\n  padding: 20px;\n  margin: 20px;\n`;\n","import { FC } from \"react\";\nimport { Gif } from \"../../hooks/useQuery\";\nimport { FavButton, GifContainer } from \"./GifList.styles\";\n\ninterface Props {\n  gif: Gif;\n  onClick: (selectedGif: Gif, toBeRemove: boolean) => void;\n  isFav: boolean;\n}\n\nconst GifList: FC<Props> = ({ gif, onClick, isFav }) => {\n  const handleClick = (selectedGif: Gif) => {\n    if (isFav) {\n      onClick(selectedGif, true);\n    } else {\n      onClick(selectedGif, false);\n    }\n  };\n\n  return (\n    <GifContainer>\n      <img key={gif.id} alt=\"gif\" src={gif?.src} />\n      <FavButton onClick={() => handleClick(gif)} fav={isFav}>\n        {isFav ? \"üëé\" : \"üëç\"}\n      </FavButton>\n    </GifContainer>\n  );\n};\n\nexport default GifList;\n","import { FC } from \"react\";\nimport { Gif } from \"../../hooks/useQuery\";\nimport GifItem from \"./Gif\";\nimport { GifListContainer } from \"./GifList.styles\";\n\ninterface Props {\n  gifs: Gif[];\n  onClick: (selectedGif: Gif, toBeRemove: boolean) => void;\n}\n\nconst GifList: FC<Props> = ({ gifs, onClick }) => {\n  return (\n    <GifListContainer>\n      {gifs?.map((gif: Gif) => {\n        const state = localStorage.getItem(\"favs\");\n        const parsedState = state ? JSON.parse(state) : [];\n\n        const isFav = parsedState?.some((favGif: Gif) => favGif.id === gif.id);\n\n        return (\n          <GifItem isFav={isFav} key={gif.id} onClick={onClick} gif={gif} />\n        );\n      })}\n    </GifListContainer>\n  );\n};\n\nexport default GifList;\n","import { ChangeEvent, FC, useState } from \"react\";\n\ninterface Props {\n  onChange: (value: string) => void;\n  value: string;\n}\nconst SearchInput: FC<Props> = ({ onChange, value }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    onChange(e.target.value);\n  };\n\n  return <input type=\"text\" value={value} onChange={handleChange} />;\n};\n\nexport default SearchInput;\n","import { ChangeEvent, FC } from \"react\";\ninterface Props {\n  value: string;\n  onChange: (value: string) => void;\n}\nconst Select: FC<Props> = ({ value, onChange }) => {\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>): void => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <select\n      placeholder=\"choose\"\n      value={value}\n      onChange={handleChange}\n      name=\"categories\"\n    >\n      <option value=\"\" disabled>\n        Select Category\n      </option>\n      <option value=\"dog\">Dog</option>\n      <option value=\"cat\">Cat</option>\n      <option value=\"mouse\">Mouse</option>\n    </select>\n  );\n};\n\nexport default Select;\n","import { useState, useEffect } from \"react\";\n\nconst useScroll = (): boolean => {\n  const [isScrolledBottom, setIsScrolledBottom] = useState(false);\n\n  useEffect(() => {\n    const updatePosition = () => {\n      setIsScrolledBottom(\n        document.documentElement.scrollTop + window.innerHeight >=\n          document.body.scrollHeight && document.documentElement.scrollTop !== 0\n      );\n    };\n    window.addEventListener(\"scroll\", updatePosition);\n    updatePosition();\n\n    return () => window.removeEventListener(\"scroll\", updatePosition);\n  }, []);\n\n  return isScrolledBottom;\n};\n\nexport default useScroll;\n","const API_KEY = \"f4nA7EJOnybwdpv9cnTsCG10bpEKm54g\";\n\nexport const ITEM_LIMIT = 25;\n\nexport const getUrl = (\n  searchValue: string,\n  startingItem: number,\n  apiKey: string = API_KEY\n) => {\n  return `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${searchValue}&limit=${ITEM_LIMIT}&offset=${startingItem}`;\n};\n","import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  padding: 40px 20px;\n`;\n\nexport const Body = styled.main`\n  padding: 20px;\n`;\n","import { FC, useEffect, useState } from \"react\";\n\nimport GifList from \"../../components/gif-list/GifList\";\nimport SearchInput from \"../../components/SearchInput\";\nimport Select from \"../../components/Select\";\n\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport { Gif, useQuery } from \"../../hooks/useQuery\";\nimport useScroll from \"../../hooks/useScroll\";\n\nimport { getUrl, ITEM_LIMIT } from \"../../utils/textUtils\";\nimport { Body, Header } from \"./Home.styles\";\n\nconst Home: FC = () => {\n  const [selectValue, setSelectValue] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const [page, setPage] = useState(0);\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [favGifs, setFavGifs] = useState<Gif[]>(() => {\n    const initialState = localStorage.getItem(\"favs\");\n    return initialState ? JSON.parse(initialState) : [];\n  });\n\n  const isScrolledBottom = useScroll();\n  const debouncedSearchValue = useDebounce(searchValue, 500);\n  const {\n    callAPI: fetchGifs,\n    res: { data: gifResponse, pageLoading, scrollLoading, error },\n  } = useQuery();\n\n  const startingItem = page * ITEM_LIMIT;\n\n  useEffect(() => {\n    setGifs((prevState) => [...prevState, ...gifResponse]);\n  }, [gifResponse]);\n\n  useEffect(() => {\n    if (isScrolledBottom) {\n      fetchGifs(getUrl(searchValue || selectValue, startingItem), true);\n      setPage((prevState) => prevState + 1);\n    }\n  }, [isScrolledBottom, fetchGifs]);\n\n  useEffect(() => {\n    if (debouncedSearchValue.length > 3) {\n      fetchGifs(getUrl(debouncedSearchValue, startingItem), false);\n      setPage((prevState) => prevState + 1);\n    }\n  }, [debouncedSearchValue, fetchGifs]);\n\n  const handleSearchChange = (receivedSearchValue: string) => {\n    setPage(0);\n    setGifs([]);\n    setSearchValue(receivedSearchValue);\n    setSelectValue(\"\");\n  };\n\n  const handleSelectChange = (selectValue: string) => {\n    setPage(0);\n    setGifs([]);\n    setSelectValue(selectValue);\n    setSearchValue(\"\");\n\n    fetchGifs(getUrl(selectValue, startingItem), false);\n    setPage((prevState) => prevState + 1);\n  };\n\n  const handleFavClick = (selectedGif: Gif, toBeRemove: boolean) => {\n    let newFavGifs: Gif[] = [];\n\n    if (toBeRemove) {\n      newFavGifs = favGifs.filter((gif) => gif.id !== selectedGif.id);\n    } else {\n      newFavGifs = !!favGifs.length ? [...favGifs, selectedGif] : [selectedGif];\n    }\n\n    localStorage.setItem(\"favs\", JSON.stringify(newFavGifs));\n\n    setFavGifs(newFavGifs);\n  };\n\n  if (pageLoading) return <h2>Loading</h2>;\n  if (error) return <div>Error</div>;\n  return (\n    <>\n      <Header>\n        <SearchInput onChange={handleSearchChange} value={searchValue} />\n        <Select onChange={handleSelectChange} value={selectValue} />\n      </Header>\n      <Body>\n        <GifList onClick={handleFavClick} gifs={gifs} />\n      </Body>\n      {scrollLoading && <h2>Scroll loading</h2>}\n    </>\n  );\n};\n\nexport default Home;\n","import { useEffect, useState } from \"react\";\n\nexport const useDebounce = <T,>(value: T, timeout: number): T => {\n  const [state, setState] = useState<T>(value);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => setState(value), timeout);\n\n    return () => clearTimeout(timeoutId);\n  }, [value, timeout]);\n\n  return state;\n};\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport interface Gif {\n  src: string;\n  id: string;\n}\n\ninterface State {\n  data: Gif[];\n  error: string | null;\n  pageLoading: boolean;\n  scrollLoading: boolean;\n}\n\ninterface MutationType {\n  callAPI: (url: string, fetchOnScroll: boolean) => void;\n  res: State;\n}\n\nexport const useQuery = (): MutationType => {\n  const [res, setRes] = useState<State>({\n    data: [],\n    error: null,\n    pageLoading: false,\n    scrollLoading: false,\n  });\n\n  const callAPI = useCallback(async (url: string, fetchOnScroll = false) => {\n    setRes((prevState) => ({\n      ...prevState,\n      ...(fetchOnScroll ? { scrollLoading: true } : { pageLoading: true }),\n    }));\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    try {\n      const result = await fetch(url);\n\n      const { data } = await result.json();\n\n      const mappedData = data.map((item: any) => ({\n        src: item.images.original.url,\n        id: item.id,\n      }));\n\n      setRes({\n        data: mappedData,\n        pageLoading: false,\n        error: null,\n        scrollLoading: false,\n      });\n    } catch (error: any) {\n      setRes({ data: [], scrollLoading: false, error, pageLoading: false });\n    }\n  }, []);\n  return { callAPI, res };\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport GifList from \"../../components/gif-list/GifList\";\nimport { Gif } from \"../../hooks/useQuery\";\n\nconst Favourites: FC = () => {\n  const [favGifs, setFavGifs] = useState(() => {\n    const initialState = localStorage.getItem(\"favs\");\n    return initialState ? JSON.parse(initialState) : [];\n  });\n\n  const handleRemove = (selectedGif: Gif) => {\n    const newGifs = favGifs.filter((gif: Gif) => gif.id !== selectedGif.id);\n\n    localStorage.setItem(\"favs\", JSON.stringify(newGifs));\n    setFavGifs(newGifs);\n  };\n\n  return (\n    <div>\n      <GifList gifs={favGifs} onClick={handleRemove} />\n    </div>\n  );\n};\n\nexport default Favourites;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding: 10px 20px;\n`;\n\nexport const StyledButton = styled.button`\n  margin-left: 10px;\n`;\n","import { FC } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, StyledButton } from \"./Nav.styles\";\n\nconst Nav: FC = () => {\n  const navigate = useNavigate();\n\n  const handleRedirection = (path: string) => {\n    navigate(path);\n  };\n\n  return (\n    <Container>\n      <StyledButton onClick={() => handleRedirection(\"/\")}>Home</StyledButton>\n      <StyledButton onClick={() => handleRedirection(\"favourites\")}>\n        Favourites\n      </StyledButton>\n    </Container>\n  );\n};\n\nexport default Nav;\n","import \"./App.css\";\nimport Home from \"./screens/home/Home\";\n\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\nimport Favourites from \"./screens/favourites/Favourites\";\nimport Nav from \"./components/nav/Nav\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Nav />\n      <Routes>\n        <Route element={<Home />} path=\"/\" />\n        <Route element={<Favourites />} path=\"/favourites\" />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}